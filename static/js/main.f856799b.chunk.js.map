{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlfor","btn","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","rows","onChange","event","console","log","target","newText","toUpperCase","showAlert","toLowerCase","split","join","copyText","document","getElementById","select","navigator","clipboard","writeText","length","Alert","alert","msg","App","setMode","_useState3","_useState4","setBtn","_useState5","_useState6","setAlert","message","setTimeout","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f856799b.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n    <nav className={`navbar navbar-expand-lg border-bottom navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/About\">About</Link> */}\r\n          </li>\r\n          {/* <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\">Disabled</a>\r\n          </li> */}\r\n        </ul>\r\n        <div className={`form-check form-switch`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">{props.btn}</label>\r\n</div>\r\n      </div>  \r\n    </div>\r\n  </nav>\r\n  </div>\r\n  )\r\n}\r\n","import React,{ useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleOnChange = (event) =>{\r\n        console.log('Change in text ' );\r\n        setText(event.target.value);\r\n        \r\n    }\r\n    const handleOnClickUpper = () =>{\r\n        console.log('Convert to uppercase button has clicked.' + text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" text is converted to uppercase. \",\"success\");\r\n\r\n    }\r\n    const handleOnClickLower = () =>{\r\n      console.log('Convert to Lower case button has clicked.' + text);\r\n      let newText=text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\" text is converted to lowercase. \",\"success\");\r\n\r\n    }\r\n    const handleOnClickClear = () =>{\r\n      console.log('Clear Text button has clicked.');\r\n      let newText='';\r\n      setText(newText);\r\n      props.showAlert(\" text is cleared. \",\"success\");\r\n\r\n  }\r\n  const handleOnCopy = () =>{\r\n    console.log('Copy Text button has clicked.');\r\n    var copyText=document.getElementById('textBox');\r\n    copyText.select();\r\n    navigator.clipboard.writeText(copyText.value);\r\n    props.showAlert(\" text copied to clipboard. \",\"success\");\r\n\r\n}\r\n  const handleOnExtraSpace = () =>{\r\n    console.log('Remove Extra Space button has clicked.');\r\n    let newText= text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\" Extra space has boon removed!. \",\"success\");\r\n\r\n}\r\n    const [text, setText] = useState('');\r\n    \r\n  return (\r\n    <>\r\n <div className={`container my-3 bg-${props.mode}`}>\r\n  <form> \r\n   <div className=\"form-group \">\r\n    <h1>{props.heading}</h1>\r\n    <textarea className={`form-control bg-${props.mode} text-${props.mode==='light'?'dark':'light'}`} value={text} id=\"textBox\" rows=\"8\" onChange={handleOnChange} ></textarea>\r\n    <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleOnClickUpper}>Convert to Upper Case</button>\r\n    <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleOnClickLower}>Convert to Lower Case</button>\r\n    <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleOnExtraSpace}>Remove Extra Space</button>\r\n\r\n    <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleOnClickClear} >Clear Text</button>\r\n    <button type=\"button\" className=\"btn btn-primary my-3 mx-1\" onClick={handleOnCopy}>Copy Text</button>\r\n   \r\n   </div>\r\n  </form>\r\n</div>\r\n<div className={`container my-2`}>\r\n  <h2>Your text summary:</h2>\r\n  <p>{text.split(\" \").length} words and {text.length} Characters.</p>\r\n  <p>{0.008*text.split(\" \").length} Minutes to read</p>\r\n  <h2>Preview</h2>\r\n  <p>{text.length>0?text:\"Enter some text in Text Box to preview it here...\"}</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        {props.alert.type}:{props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg';\nimport React,{useState} from 'react'\n\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [btn, setBtn] = useState('Enable Dark Mode');\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert=(message,type)=>{\n     setAlert({\n      msg:message,\n      type: type,\n     })\n     setTimeout(()=>{\n      setAlert(null);\n     },1500);\n  }\n  const toggleMode=()=>{\n    if(mode ==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='rgb(33,37,41)';\n      document.body.style.color='white';\n      showAlert(\"Dark mode is enabled\",\"success\");\n      setBtn(\"Disable Dark Mode\");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black';\n      showAlert(\"Light mode is enabled\",\"success\")\n      setBtn(\"Enable Dark Mode\")\n    }\n  }\n  return (\n<>\n{/* <BrowserRouter> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} btn={btn}/>\n    <Alert alert={alert}/>\n    <TextForm heading=\"Enter the text to analyze:\" mode={mode} showAlert={showAlert}/>\n      {/* <Routes>\n        <Route exact path=\"/about\" element={<About />}>\n      </Route>\n      <Route exact path=\"/\" index element={<TextForm/></TextForm> } />\n      </Routes>\n    </BrowserRouter> */}\n\n         \n\n  </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}